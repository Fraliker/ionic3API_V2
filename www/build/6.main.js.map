{"version":3,"sources":["../../src/pages/contact/contact.module.ts","../../node_modules/@ionic-native/email-composer/index.js","../../src/pages/contact/contact.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACR;AACsB;AAgB9D,IAAa,iBAAiB;IAA9B;IAAgC,CAAC;IAAD,wBAAC;AAAD,CAAC;AAApB,iBAAiB;IAb7B,8EAAQ,CAAC;QACR,YAAY,EAAE;YACZ,6DAAW;SACZ;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;YACrC,+EAAgB;SAEjB;QACD,OAAO,EAAE;YACP,6DAAW;SACZ;KACF,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;ACnB9B;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACsC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,2BAA2B,OAAO;AAClC;AACA,sEAAsE;AACtE;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,uBAAuB,IAAI;AAC3B,iBAAiB,aAAa;AAC9B;AACA,8DAA8D,QAAQ;AACtE;AACA,CAAC;AACD;AACA,KAAK,kEAAmB;AACxB;AACA;AACA,4CAA4C,WAAW;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR,iC;;;;;;;;;;;;;;;;;;;;;ACzJwC;AAC2C;AAExB;AAS3D,IAAa,WAAW;IAGpB,qBAAmB,OAAsB,EACtB,SAAoB,EACpB,SAA0B,EAC1B,aAA4B;QAH5B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAiB;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAL/C,SAAI,GAAQ,EAAE;IAOd,CAAC;IAED,4BAAM,GAAN,UAAO,IAAY;QACf,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YACpB,gGAAgG;YAC5F,EAAE,EAAE,4BAA4B;YAChC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YACvB,MAAM,EAAE,IAAI;SACf,EACD,UAAU,QAAQ;YACd,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QACP,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACnB,CAAC;IAEL,kBAAC;AAAD,CAAC;AAxBY,WAAW;IANvB,uFAAS,EAAE;IACX,+EAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,WAAW,oFAAE,CAAc;OACD;KAC7B,CAAC;yEAI2C;QACX,sEAAS;QACT,qFAAe;QACX,QAAa;AAkBlD;SAxBY,WAAW,e","file":"6.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ContactPage } from './contact';\nimport { TranslaterModule } from '../../app/translate.module';\n\n\n@NgModule({\n  declarations: [\n    ContactPage\n  ],\n  imports: [\n    IonicPageModule.forChild(ContactPage),\n    TranslaterModule\n    \n  ],\n  exports: [\n    ContactPage\n  ]\n})\nexport class ContactPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, Plugin, CordovaCheck, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Email Composer\n * @description\n *\n * Requires Cordova plugin: cordova-plugin-email-composer. For more info, please see the [Email Composer plugin docs](https://github.com/hypery2k/cordova-email-plugin).\n *\n *\n * @usage\n * ```typescript\n * import { EmailComposer } from '@ionic-native/email-composer';\n *\n * constructor(private emailComposer: EmailComposer) { }\n *\n * ...\n *\n *\n * this.emailComposer.isAvailable().then((available: boolean) =>{\n *  if(available) {\n *    //Now we know we can send\n *  }\n * });\n *\n * let email = {\n *   to: 'max@mustermann.de',\n *   cc: 'erika@mustermann.de',\n *   bcc: ['john@doe.com', 'jane@doe.com'],\n *   attachments: [\n *     'file://img/logo.png',\n *     'res://icon.png',\n *     'base64:icon.png//iVBORw0KGgoAAAANSUhEUg...',\n *     'file://README.pdf'\n *   ],\n *   subject: 'Cordova Icons',\n *   body: 'How are you? Nice greetings from Leipzig',\n *   isHtml: true\n * };\n *\n * // Send a text message using default options\n * this.emailComposer.open(email);\n *\n * ```\n * @interfaces\n * EmailComposerOptions\n */\nvar EmailComposer = (function (_super) {\n    __extends(EmailComposer, _super);\n    function EmailComposer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Verifies if sending emails is supported on the device.\n     *\n     * @param [app] {string} App id or uri scheme.\n     * @returns {Promise<any>} Resolves if available, rejects if not available\n     */\n    EmailComposer.prototype.isAvailable = function (app) {\n        return new Promise(function (resolve, reject) {\n            if (app) {\n                cordova.plugins.email.isAvailable(app, function (isAvailable) {\n                    if (isAvailable) {\n                        resolve();\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            }\n            else {\n                cordova.plugins.email.isAvailable(function (isAvailable) {\n                    if (isAvailable) {\n                        resolve();\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            }\n        });\n    };\n    /**\n     * Adds a new mail app alias.\n     *\n     * @param alias {string} The alias name\n     * @param packageName {string} The package name\n     */\n    EmailComposer.prototype.addAlias = function (alias, packageName) { };\n    /**\n     * Displays the email composer pre-filled with data.\n     *\n     * @param options {EmailComposerOptions} Email\n     * @param [scope] {any} Scope for the promise\n     * @returns {Promise<any>} Resolves promise when the EmailComposer has been opened\n     */\n    EmailComposer.prototype.open = function (options, scope) { return; };\n    return EmailComposer;\n}(IonicNativePlugin));\nEmailComposer.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nEmailComposer.ctorParameters = function () { return []; };\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], EmailComposer.prototype, \"isAvailable\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", void 0)\n], EmailComposer.prototype, \"addAlias\", null);\n__decorate([\n    Cordova({\n        successIndex: 1,\n        errorIndex: 3\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object, Object]),\n    __metadata(\"design:returntype\", Promise)\n], EmailComposer.prototype, \"open\", null);\nEmailComposer = __decorate([\n    Plugin({\n        pluginName: 'EmailComposer',\n        plugin: 'cordova-plugin-email',\n        pluginRef: 'cordova.plugins.email',\n        repo: 'https://github.com/hypery2k/cordova-email-plugin',\n        platforms: ['Amazon Fire OS', 'Android', 'Browser', 'iOS', 'Windows']\n    })\n], EmailComposer);\nexport { EmailComposer };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ionic-native/email-composer/index.js\n// module id = 623\n// module chunks = 6 7","import {Component} from '@angular/core';\nimport {NavController, NavParams, IonicPage, ToastController} from 'ionic-angular';\nimport {NgForm} from \"@angular/forms\";\nimport {EmailComposer} from '@ionic-native/email-composer';\n\n\n@IonicPage()\n@Component({\n    selector: 'page-contact',\n    templateUrl: 'contact.html',\n    providers: [EmailComposer]\n})\nexport class ContactPage {\n    user: any = {}\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public toastCtrl: ToastController,\n                public emailComposer: EmailComposer) {\n\n    }\n\n    onSend(user: NgForm) {\n        this.emailComposer.open({\n            // You just need to change this Email address to your own email where you want to receive email.\n                to: 'ionicfirebaseapp@gmail.com',\n                subject: this.user.name,\n                body: this.user.message,\n                isHtml: true\n            },\n            function (callback) {\n                console.log('email view dismissed');\n            });\n        this.user = '';\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.ts"],"sourceRoot":""}