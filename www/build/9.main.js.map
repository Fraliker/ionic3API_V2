{"version":3,"sources":["../../src/pages/settings/settings.module.ts","../../src/pages/settings/settings.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACV;AACwB;AAgB9D,IAAa,cAAc;IAA3B;IAA6B,CAAC;IAAD,qBAAC;AAAD,CAAC;AAAjB,cAAc;IAb1B,8EAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAQ;SACT;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,2DAAQ,CAAC;YAClC,+EAAgB;SAEjB;QACD,OAAO,EAAE;YACP,2DAAQ;SACT;KACF,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;ACnBa;AACc;AAEP;AAQ/C,IAAa,QAAQ;IAgBjB,kBAAmB,OAAsB,EAC9B,SAA0B;QADlB,YAAO,GAAP,OAAO,CAAe;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAhBrC,SAAI,GAAQ,EAAE,CAAC;QACf,QAAG,GAAQ,wBAAwB,CAAC;QAEpC,YAAO,GAAI;YACL;gBACE,UAAU,EAAE,SAAS;gBACrB,OAAO,EAAC,IAAI;aACV;YACJ;gBACE,UAAU,EAAC,QAAQ;gBACnB,OAAO,EAAC,IAAI;aACb;SACF,CAAC;QAKF,IAAI,CAAC,KAAK,GAAC,IAAI;IACnB,CAAC;IAED,2BAAQ,GAAR,UAAS,IAAY;QACjB,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACpE,CAAC;IAGD,0BAAO,GAAP,UAAQ,KAAK;QAAb,iBASC;QARG,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,MAAM,GAAG,UAAC,KAAU;gBACvB,KAAI,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;YACnC,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,CAAC;IAEL,CAAC;IAEA,iCAAc,GAAd;QACC,OAAO,CAAC,GAAG,CAAC,eAAe,GAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzC,EAAE,EAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,EAAC;YACtB,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;YAC3C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;QACC,IAAI,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YAC5C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC;IAEC,CAAC;IACN,eAAC;AAAD,CAAC;AAjDY,QAAQ;IALpB,uFAAS,EAAE;IACX,+EAAS,CAAC;QACP,QAAQ,EAAE,eAAe;OACG;KAC/B,CAAC;iFAiB2C;QACpB,KAAgB;AAgCxC;SAjDY,QAAQ,mB","file":"9.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { Settings } from './settings';\nimport { TranslaterModule } from '../../app/translate.module';\n\n\n@NgModule({\n  declarations: [\n    Settings\n  ],\n  imports: [\n    IonicPageModule.forChild(Settings),\n    TranslaterModule\n    \n  ],\n  exports: [\n    Settings\n  ]\n})\nexport class SettingsModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.module.ts","import {Component} from '@angular/core';\nimport {NavController,IonicPage} from 'ionic-angular';\nimport {NgForm} from \"@angular/forms\";\nimport {TranslateService} from 'ng2-translate';\n\n\n@IonicPage()\n@Component({\n    selector: 'page-settings',\n    templateUrl: 'settings.html'\n})\nexport class Settings {\n    user: any = {};\n    url: any = \"assets/img/profile.jpg\";\n    value:any;\n    options =  [\n          {\n            \"language\": \"ENGLISH\",\n            \"value\":\"en\"\n             },\n          {\n            \"language\":\"FRENCH\",\n            \"value\":\"fr\"\n          }\n        ];\n     \n\n    constructor(public navCtrl: NavController,\n        public translate:TranslateService) {\n        this.value=\"en\"\n    }\n\n    onSubmit(user: NgForm) {\n        console.log(\"user Setting Data : \" + JSON.stringify(this.user));\n    }\n\n\n    readUrl(event) {\n        if (event.target.files && event.target.files[0]) {\n            var reader = new FileReader();\n            reader.onload = (event: any) => {\n                this.url = event.target.result;\n            };\n            reader.readAsDataURL(event.target.files[0]);\n        }\n\n    }\n\n     changeLanguage(){\n      console.log(\"language is -\"+this.value);\n     if(this.value == 'fr'){\n      console.log(\"Selected language is French\");\n      this.translate.use('fr');\n     }\n       else {\n     console.log(\"Selected language is English\");\n     this.translate.use('en');\n   }\n\n     }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts"],"sourceRoot":""}